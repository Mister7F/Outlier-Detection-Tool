##############################
# GENERAL
##############################
[general]

# Elasticsearch parameters
es_url=127.0.0.1:9200
es_index_pattern=nviso_events
es_scan_size=10000
es_scroll_time=25m
es_timeout=300
es_terminate_after=5000000

# The field name representing the event timestamp in Elasticsearch
timestamp_field=@timestamp

# Save outlier detection results to Elasticsearch (if set to 0, Elasticsearch events won't be touched - great for testing)
es_save_results=1

# Print outlier matches to the console. For testing purposes, it's advised to enable this so that the analyst can directly see on the command line which outliers are detected
print_outliers_to_console=1

# How far back should we process events and look for outliers?
# Both values are combined (for example the below will look back 7 days and 12 hours, up until right now).
history_window_days=1000
history_window_hours=12

# Wipe all existing outliers that fall in the history window upon first run
es_wipe_all_existing_outliers=0

# How often should existing outliers be checked for a match against the configuration whitelist, and should outlier fields be removed again from matched documents
housekeeping_interval_seconds=60
es_wipe_all_whitelisted_outliers=1

# General flags to run, test or train models
# Training is only used by the Machine Learning models (word2vec)
run_models=1
test_models=0
train_models=0

# 0 for no progress info,  1-4 for progressively more output, 5+ for all the log output
log_verbosity=1

# CRITICAL ERROR WARNING INFO DEBUG
log_level=INFO
log_file=/mappedvolumes/logs/outliers.log

##############################
# ASSET FIELDS
##############################
[assets]
meta.logged_in_users=user
meta.hostname=host

##############################
# NOTIFIER
##############################
[notifier]
email_notifier=0
notification_email=user@user.be
smtp_user=<USERNAME>
smtp_pass=<PASSWORD>
smtp_server=<SMTP SERVER>
smtp_port=465

##############################
# DAEMON
##############################
[daemon]
# Only used when running ee-outliers in daemon mode. Below schedule will run each day at 00:00.
schedule=0 0 * * *

##############################
# BEACONING PARAMETERS
##############################
[beaconing]
# Define how many events should be processed at the same time, before looking for outlies.
# More often means better results, but will result in increased memory usage.
beaconing_batch_eval_size=1000000

##############################
# TERMS PARAMETERS
##############################
[terms]
# Define how many events should be processed at the same time, before looking for outlies.
# More often means better results, but will result in increased memory usage.
terms_batch_eval_size=100000

##############################
# METRICS PARAMETERS
##############################
[metrics]
# Define how many events should be processed at the same time, before looking for outlies.
# More often means better results, but will result in increased memory usage.
metrics_batch_eval_size=100000

##############################
# MACHINE LEARNING PARAMETERS
##############################
[machine_learning]
# Defaults to 0, so all logs are shown. Set TF_CPP_MIN_LOG_LEVEL to 1 to filter out INFO logs, 2 to additionall filter out WARNING, 3 to additionally filter out ERROR.
tensorflow_log_level=2
word2vec_batch_eval_size=1000
word2vec_use_cache=1
word2vec_use_test_data=0

training_data_size_pct=100
training_steps=100000
models_directory=/tmp/ee-outliers/trained_models/

##############################
# DERIVED FIELDS
##############################
[derivedfields]
timestamp=%{HOUR:timestamp_hour}:?%{MINUTE:timestamp_minute}(?::?%{SECOND:timestamp_second})


######################################################################################################################################################
# BEACONING USE CASE MODEL - EXAMPLES
######################################################################################################################################################

##############################
# BEACONING - DETECT OUTBOUND SSL BEACONING - TLS
##############################
[beaconing_ssl_outbound]
es_query_filter=BroFilter.event_type:"ssl.log" AND _exists_:BroFilter.server_name

aggregator=BroFilter.server_name,BroFilter.id_orig_h,timestamp_day
target=timestamp_hour
trigger_sensitivity=1

outlier_type=suspicious connection
outlier_reason=beaconing TLS connection
outlier_summary=beaconing TLS connection to {BroFilter.server_name}

run_model=1
test_model=0

#######################################
# SIMPLEQUERY USE CASE MODEL - EXAMPLES
#######################################

##############################
# SIMPLEQUERY - POWERSHELL EXECUTION IN HIDDEN WINDOW
##############################
[simplequery_powershell_execution_hidden_window]
es_query_filter=tags:endpoint AND "powershell.exe" AND (OsqueryFilter.cmdline:"-W hidden" OR OsqueryFilter.cmdline:"-WindowStyle Hidden")

outlier_type=powershell
outlier_reason=powershell execution in hidden window
outlier_summary=powershell execution in hidden window

run_model=1
test_model=0

#################################
# TERMS USE CASE MODEL - EXAMPLES
#################################

##########################################################################
# TERMS - BRUTE FORCE FIELDS TO LOOK FOR GENERIC ANOMALIES - ENDPOINT LOGS
##########################################################################
[terms_brute_force_anomalies_nginx]
es_query_filter=tags:endpoint

aggregator=slave_name
target=*
target_count_method=within_aggregator
trigger_on=low
trigger_method=mad
trigger_sensitivity=3

outlier_type=hunting
outlier_reason=anomaly discovery
outlier_summary=anomaly for field {brute_forced_field}

run_model=0
test_model=0

###################################################
# TERMS - RARE PROCESSES WITH OUTBOUND CONNECTIVITY
###################################################
[terms_rarely_seen_outbound_connections]
es_query_filter=tags:endpoint AND meta.command.name:"get_outbound_conns" AND -OsqueryFilter.remote_port.raw:0 AND -OsqueryFilter.remote_address.raw:127.0.0.1 AND -OsqueryFilter.remote_address.raw:"::1"

aggregator=OsqueryFilter.name
target=meta.hostname
target_count_method=across_aggregators
trigger_on=low
trigger_method=pct_of_max_value
trigger_sensitivity=5

outlier_type=outbound connection
outlier_reason=rare outbound connection
outlier_summary=rare outbound connection: {OsqueryFilter.name}

run_model=1
test_model=0

###################################
# METRICS USE CASE MODEL - EXAMPLES
###################################

#################################################
# METRICS - BASE64 ENCODED COMMAND LINE ARGUMENTS
#################################################
[metrics_base64_encoded_cmdline]
es_query_filter=tags:endpoint AND _exists_:OsqueryFilter.cmdline

aggregator=OsqueryFilter.name
target=OsqueryFilter.cmdline
metric=base64_encoded_length
trigger_on=high
trigger_method=mad
trigger_sensitivity=3

outlier_type=encoded commands
outlier_reason=base64 encoded command line arguments
outlier_summary=base64 encoded command line arguments for process {OsqueryFilter.name}

run_model=1
test_model=0

############
# WHITELISTS
############
[whitelist_literals]
slack_connection=rare outbound connection: Slack.exe

[whitelist_regexps]
scheduled_task_user_specific_2=^.*rare scheduled task:.*-.*-.*-.*-.*$
autorun_user_specific=^.*rare autorun:.*-.*-.*-.*-.*$

############################################
# AUTOENCODER - Credicards fraud detection #
############################################
[autoencoder]

fields=V1,V2,V3,V4,V5,V6,V7,V8,V9,V10,V11,V12,V13,V14,V15,V16,V17,V18,V19,V20,V21,V22,V23,V24,V25,V26,V27,V28

# Show these fields the item is an anomaly
output_fields=Class,Amount
number_of_elements_displayed=30 

outlier_reason=Fraud
outlier_type=Fraud
outlier_summary=This transaction seems to be a fraud... Pay attention !

# Network configuration
layers=28,50,10,50,28
epochs=2

# 1 or 0 (credicards don't have timestamp :/ )
ignore_history_window=1

# To test the model, is data is labelised (1: Anomaly, 0: Normal)
test_the_model=1
test_label=Class
number_of_points_plotted=1000

#######################
# CLUSTERING - K-MEAN #
#######################
[clustering_str_k_mean]

es_query_filter=_exists_:OsqueryFilter.name AND _exists_:OsqueryFilter.parentname 

n_cluster=10

# All features have to be a string
features=OsqueryFilter.name,OsqueryFilter.parentname

#################
# DECISION TREE #
#################
[decision_tree]

es_query_filter=_exists_:OsqueryFilter.name AND _exists_:OsqueryFilter.parentname AND _exists_:OsqueryFilter.threads AND _exists_:OsqueryFilter.username AND _exists_:OsqueryFilter.usertype

aggregators=OsqueryFilter.name,OsqueryFilter.parentname,OsqueryFilter.threads,OsqueryFilter.username

target=OsqueryFilter.usertype

feature_type=enum,enum,float,enum,enum
max_depth=3

########################################################
# SENTENCE PREDICTION MODEL - Detect malicious cmdline #
########################################################
[sentence_prediction]

es_query_filter=_exists_:OsqueryFilter.cmdline

outlier_reason=Wrong prediction
outlier_type=Prediction error
outlier_summary=The model makes a big error to predict this item... It might be an anomaly


aggregator=OsqueryFilter.name
target=OsqueryFilter.cmdline

# Regex to catch the path
path_regex=((^[^\"\s]+)|(^\"[^\"]+))
tokenizer_split_path=\,/,",'

# Maximum dictionnary size for one hot encoding
tokenizer_max_dic_size=4000

# Keep only the 10 first directories
path_truncation=10

#################################
# ITEM LIFE  - Abnormal session #
#################################
[itemlife_abnormal_number_of_session]
es_query_filter=_exists_:meta.hostname AND _exists_:meta.logged_in_users_details.time AND _exists_:meta.deployment_name
aggregator=meta.hostname
item_identifiers=meta.logged_in_users_details.time,meta.hostname

outlier_reason=Strange maximale duration
outlier_type=Strange maximale duration
outlier_summary={meta.hostname} {meta.deployment_name} - Max duration: <target>

# <with_in_aggregator>
# 'start_timestamp', 'start_year', 'start_month', 'start_day', 'start_hour', 'start_minute', 
# 'end_timestamp', 'end_year', 'end_month', 'end_day', 'end_hour', 'end_minute',
# 'duration'
# <across_aggregator>
# number_of_events, max_duration, min_duration, mean_duration
target=mean_duration
trigger_method=stdev
trigger_sensitivity=3


[itemlife_abnormal_duration_deployment_based]
es_query_filter=_exists_:meta.hostname AND _exists_:meta.logged_in_users_details.time AND _exists_:meta.deployment_name
aggregator=meta.deployment_name
item_identifiers=meta.logged_in_users_details.time,meta.hostname

outlier_reason=Strange end hour
outlier_type=Strange end hour
outlier_summary={meta.hostname} {meta.deployment_name} - A strange session duration: <target>

target=duration
trigger_method=stdev
trigger_sensitivity=3


[itemlife_abnormal_end_hour_deployment_based]
es_query_filter=_exists_:meta.hostname AND _exists_:meta.logged_in_users_details.time AND _exists_:meta.deployment_name
aggregator=meta.deployment_name
item_identifiers=meta.logged_in_users_details.time,meta.hostname

outlier_reason=Strange end hour
outlier_type=Strange end hour
outlier_summary={meta.hostname} {meta.deployment_name} - A strange session end at <target>

target=end_hour
trigger_method=lof
trigger_sensitivity=3


[itemlife_abnormal_start_hour_deployment_based]
es_query_filter=_exists_:meta.hostname AND _exists_:meta.logged_in_users_details.time AND _exists_:meta.deployment_name
aggregator=meta.deployment_name
item_identifiers=meta.logged_in_users_details.time,meta.hostname

outlier_reason=Strange start time
outlier_type=Strange start time
outlier_summary={meta.hostname} {meta.deployment_name} - A strange session start at <target>

target=start_hour
trigger_method=lof
trigger_sensitivity=3


[itemlife_abnormal_start_hour_hostname_based]
es_query_filter=_exists_:meta.hostname AND _exists_:meta.logged_in_users_details.time
aggregator=meta.hostname
item_identifiers=meta.logged_in_users_details.time,meta.hostname

outlier_reason=Strange start time
outlier_type=Strange start time
outlier_summary={meta.hostname} - A strange session start at <target>

target=start_hour
trigger_method=lof
trigger_sensitivity=3
